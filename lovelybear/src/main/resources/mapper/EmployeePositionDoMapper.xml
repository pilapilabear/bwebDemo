<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lovelybear.dao.EmployeePositionDoMapper">
  <resultMap id="BaseResultMap" type="com.lovelybear.domain.EmployeePositionDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="department_id" jdbcType="INTEGER" property="departmentId" />
    <result column="position_id" jdbcType="INTEGER" property="positionId" />
    <result column="is_default" jdbcType="INTEGER" property="isDefault" />
  </resultMap>
  <sql id="Base_Column_List">
    id, employee_id, department_id, position_id, is_default
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_employee_position
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_employee_position
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lovelybear.domain.EmployeePositionDo">
    insert into sys_employee_position (id, employee_id, department_id, 
      position_id, is_default)
    values (#{id,jdbcType=INTEGER}, #{employeeId,jdbcType=INTEGER}, #{departmentId,jdbcType=INTEGER}, 
      #{positionId,jdbcType=INTEGER}, #{isDefault,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lovelybear.domain.EmployeePositionDo">
    insert into sys_employee_position
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="employeeId != null">
        employee_id,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="positionId != null">
        position_id,
      </if>
      <if test="isDefault != null">
        is_default,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="employeeId != null">
        #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        #{positionId,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        #{isDefault,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lovelybear.domain.EmployeePositionDo">
    update sys_employee_position
    <set>
      <if test="employeeId != null">
        employee_id = #{employeeId,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=INTEGER},
      </if>
      <if test="positionId != null">
        position_id = #{positionId,jdbcType=INTEGER},
      </if>
      <if test="isDefault != null">
        is_default = #{isDefault,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lovelybear.domain.EmployeePositionDo">
    update sys_employee_position
    set employee_id = #{employeeId,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=INTEGER},
      position_id = #{positionId,jdbcType=INTEGER},
      is_default = #{isDefault,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>