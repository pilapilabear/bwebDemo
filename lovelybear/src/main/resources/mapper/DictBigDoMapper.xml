<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lovelybear.dao.DictBigDoMapper">
  <resultMap id="BaseResultMap" type="com.lovelybear.domain.DictBigDo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="is_sys_init" jdbcType="INTEGER" property="isSysInit" />
    <result column="desc" jdbcType="VARCHAR" property="desc" />
    <result column="nm" jdbcType="VARCHAR" property="nm" />
  </resultMap>
  <sql id="Base_Column_List">
    id, code, name, is_sys_init, desc, nm
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sys_dict_big
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from sys_dict_big
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.lovelybear.domain.DictBigDo">
    insert into sys_dict_big (id, code, name, 
      is_sys_init, desc, nm
      )
    values (#{id,jdbcType=INTEGER}, #{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{isSysInit,jdbcType=INTEGER}, #{desc,jdbcType=VARCHAR}, #{nm,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lovelybear.domain.DictBigDo">
    insert into sys_dict_big
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="isSysInit != null">
        is_sys_init,
      </if>
      <if test="desc != null">
        desc,
      </if>
      <if test="nm != null">
        nm,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="isSysInit != null">
        #{isSysInit,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        #{desc,jdbcType=VARCHAR},
      </if>
      <if test="nm != null">
        #{nm,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lovelybear.domain.DictBigDo">
    update sys_dict_big
    <set>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="isSysInit != null">
        is_sys_init = #{isSysInit,jdbcType=INTEGER},
      </if>
      <if test="desc != null">
        desc = #{desc,jdbcType=VARCHAR},
      </if>
      <if test="nm != null">
        nm = #{nm,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lovelybear.domain.DictBigDo">
    update sys_dict_big
    set code = #{code,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      is_sys_init = #{isSysInit,jdbcType=INTEGER},
      desc = #{desc,jdbcType=VARCHAR},
      nm = #{nm,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>